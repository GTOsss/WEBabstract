inherit означает, что данное свойство принимает такое же значение, как и у родительского элемента.
чем меньше тегов оказывается под действием селектора, тем селектор приоритетнее.
!important позволяет задать наивысший приоритет для свойства.
li:not(:last-child) { } селектор для всех элементов кроме последнего
position: relative; относительно позиционированние, просто смещает объект относительно его настоящего положения
	при этом соседние элеметы не будут смещены.
position: absolute; абсолютное позиционирование. Выпадают из потока документа. Место, которое они занимали, становится 
	как бы пустым и его занимают соседние элементы. Ширина по умолчанию зависит от содержимого (а не растягивается 
	на всю доступную ширину). Остаются на том же месте, где были, если не заданы значения свойств top, left...
position: fixed; задаёт элементу фиксированное позиционирование. Фиксированное позиционирование похоже на абсолютное, 
	но есть и отличия:
	Фиксированный элемент тоже выпадает из потока.
	Фиксированный элемент привязывается к определенной точке в окне браузера и остается на ней всегда, даже при 
		прокрутке страницы.
	Фиксированный элемент можно позиционировать с помощью свойств top, left, right, bottom, но точка отсчета 
	всегда привязана к окну браузера.
z-index: 10; задает глубину. чем больше тем выше
border:размер стиль цвет; solid - сплощная/ dashed - пунктирная/ dotted - точками
margin: auto auto auto auto; отцентровка блока
box-sizing: border-box; полезное свойство делающию логику вычисления размера более логичной и предсказуемой
выравнивание по центру через flex
    display: flex;
    justify-content: center;   
    align-items: center;
display: none; скрывает элемент на странице (точнее удаляет)
visibility: hidden; скрывает элемент
background-repeat: repeat; значение по умолчанию для повторение картинки. еще есть no-repeat, repeat-x, repeat-y;
background-position пример использования
	background-position: 50% 50%;
	background-position: right bottom;
	background-position: 50px 100px;
	background-position: 0 100%;
	background-position: left bottom;
	Так сработают примеры:

	картинка будет по центру;
	правый нижний угол;
	отступ 50px от левого края и 100px от верхнего;
	левый нижний угол;
	левый нижний угол. 
background-attachment : fixed; (scroll) зафиксировать фон на месте и он не будет перемещаться при прокручивании.
background: [bc] [bi] [br] [bp] [ba];
/* Обозначения:
[bc] — background-color
[bi] — background-image
[br] — background-repeat
[bp] — background-position
[ba] — background-attachment
*/
element:nth-child(1) обратится к первову элементу
box-shadow:
	[inset] - внутренняя
	5px     - смещение по x
	10px    - смещение по y
	[2px]   - размытие
	[3px]   - растяжение
	[red];  - цвет
	
////////////////////////////////////// TEXT /////////////////////////////////////
white-space: nowrap;   запрет на перенос строки
font-weight: bold; жирный текст, normal установить обычный
font-style: italic; курсивный текст, normal установить обычный
font-family serif — шрифт с засечками;  sans-serif — шрифт без засечек.
text-decoration underline; текст с подчекиванием 
				line-through — зачеркивание; 
				overline — черта сверху; 
				none — убирает вышеперечисленные эффекты. 
text-transform: lowercase; задает регистр текста. 
				lowercase — все строчные;
				uppercase — все прописные;
				capitalize — каждое слово начинается с прописной;
				none — отменяет изменение регистра.
white-space: nowrap; — отображает весь текст одной строкой без переносов;
			pre — сохраняет пробелы и переносы как в исходном коде аналогично тегу <pre>;
			pre-wrap — работает как значение pre, но добавляет автоматические переносы, если текст не помещается в контейнер;
			normal — режим по умолчанию.
text-align: left; — выравнивание по левому краю;
			right — по правому краю;
			center — по центру;
			justify — по ширине.
vertical-align: top — выравнивание по верхнему краю строки;
				middle — по середине;
				bottom — по нижнему краю;
				baseline — по базовой линии (значение по умолчанию).
				sub - верхний индекс
				super - нижний индекс
line-height: normal; фиксирует высоту строки
text-shadow: 30px 30px 1px #111111; тень текста
overflow: hidden; отображение внутренних элементов если они выходят за границы

skinBlock.style.transform = `rotateY(${degg}deg)`; пример вращения по y!!!!

vw – 1% ширины окна
vh – 1% высоты окна

когда задаешь элементу display: inline-block; ,так сразу нужно задавать vertical-align
	